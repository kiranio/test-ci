version: 2.1
orbs:
  codecov: codecov/codecov@1.0.5
  aws-s3: circleci/aws-s3@2.0.0
jobs:
  build:
    docker:
      - image: circleci/node:12
    steps:
      - run-test
      - store-coverage-data
      - upload-coverage-data

    working_directory: ~/repo
  deploy:
    docker:
      - image: circleci/node:12
    steps:
      - build-project
      - deploy-to-aws-s3

    working_directory: ~/repo
  deploy-docs:
    docker:
      - image: circleci/node:12
    steps:
      - build-project-storybook
      - deploy-storybook-to-aws-s3

    working_directory: ~/repo

  e2e-acceptance-tests:
    docker:
      # the Docker image with Cypress dependencies
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm
    parallelism: 1
    steps:
      - run-e2e-tests

    working_directory: ~/repo
commands:
  run-test:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn test:coverage
  
  store-coverage-data:
    steps:
      - store_artifacts:
          path: coverage

  upload-coverage-data:
    steps:
      - codecov/upload:
          file: coverage/coverage-final.json

  build-project:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn build

  deploy-to-aws-s3:
    steps:
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY_ID_BLUE
          aws-region: AWS_REGION_BLUE
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_BLUE
          from: build
          to: 's3://customer-registration-app'

  build-project-storybook:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn build-storybook

  deploy-storybook-to-aws-s3:
    steps:
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: AWS_ACCESS_KEY_ID_BLUE
          aws-region: AWS_REGION_BLUE
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_BLUE
          from: storybook-static
          to: 's3://customer-registration-app-storybook'

  run-e2e-tests:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn cy:run
      - store_artifacts:
          path: cypress/videos
      - store_artifacts:
          path: cypress/screenshots
workflows:
  version: 2
  build_and_test:
    jobs:
      - e2e-acceptance-tests
          